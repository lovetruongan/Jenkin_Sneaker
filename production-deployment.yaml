services:
  nginx-proxy:
    container_name: nginx-proxy
    image: nginxproxy/nginx-proxy:alpine
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /var/docker/nginx/html:/usr/share/nginx/html
      - /var/docker/nginx/certs:/etc/nginx/certs
      - /var/docker/nginx/vhost:/etc/nginx/vhost.d
      - /var/docker/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - Sneaker-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  letsencrypt-companion:
    container_name: letsencrypt-companion
    image: jrcs/letsencrypt-nginx-proxy-companion:latest
    restart: always
    volumes_from:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/docker/nginx/acme:/etc/acme.sh
    networks:
      - Sneaker-network
    environment:
      DEFAULT_EMAIL: your-real-email@domain.com
    depends_on:
      - nginx-proxy

  mysql8-container:
    container_name: mysql8-container
    image: mysql:8.2.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-admin}
      MYSQL_DATABASE: ${DB_NAME:-shopsneaker}
      MYSQL_USER: ${DB_USER:-sneakerapp}
      MYSQL_PASSWORD: ${DB_PASSWORD:-securepass}
    volumes:
      - mysql_data:/var/lib/mysql
    expose:
      - 3306
    networks:
      - Sneaker-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

  phpmyadmin8-container:
    image: arm64v8/phpmyadmin
    container_name: phpmyadmin8-container
    restart: always
    depends_on:
      - mysql8-container
    expose:
      - 80
    environment:
      PMA_HOST: mysql8-container
      VIRTUAL_HOST: pma.sneakers-shop.com
      VIRTUAL_PORT: 80
      LETSENCRYPT_HOST: pma.sneakers-shop.com
      LETSENCRYPT_EMAIL: your-real-email@domain.com
    networks:
      - Sneaker-network

  sneaker-spring-container:
    container_name: sneaker-spring-container
    build:
      context: .
      dockerfile: DockerfileJavaSpring
    restart: always
    expose:
      - 8089
    environment:
      - VIRTUAL_HOST=api.sneakers-shop.com
      - VIRTUAL_PORT=8089
      - LETSENCRYPT_HOST=api.sneakers-shop.com
      - LETSENCRYPT_EMAIL=your-real-email@domain.com
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql8-container:3306/${DB_NAME:-shopsneaker}?serverTimezone=UTC&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=${DB_USER:-sneakerapp}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD:-securepass}
      - JAVA_OPTS=-Xms256m -Xmx512m -XX:+UseG1GC
    depends_on:
      - mysql8-container
    networks:
      - Sneaker-network

  sneaker-angular-container:
    container_name: sneaker-angular-container
    build:
      context: .
      dockerfile: DockerfileAngular
    restart: always
    expose:
      - 80
    environment:
      - VIRTUAL_HOST=sneakers-shop.com,www.sneakers-shop.com
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=sneakers-shop.com,www.sneakers-shop.com
      - LETSENCRYPT_EMAIL=your-real-email@domain.com
    networks:
      - Sneaker-network
    depends_on:
      - sneaker-spring-container

volumes:
  mysql_data:
    name: sneaker_mysql_data

networks:
  Sneaker-network:
    name: Sneaker-network
    driver: bridge
    external: true
